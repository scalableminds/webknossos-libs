name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install poetry
        poetry install

    - name: Decompress test data
      run: tar -xzvf testdata/WT1_wkw.tar.gz

    - name: Check formatting
      run: poetry run black --check .

    - name: Lint code
      run: poetry run pylint -j4 wkcuber

    - name: Check typing
      run: |
        ./typecheck.sh

    - name: Python tests
      run: poetry run pytest tests

    - name: CLI tests
      run: tests/scripts/all_tests.sh

    - name: Generate Docs
      if: matrix.python-version == '3.8'
      run: |
        docs/api.sh --persist
    
    - name: Push docs (for branch)
      if: startsWith(github.event.ref, 'refs/heads') && matrix.python-version == '3.8'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "eu-west-1"
      run: |
        CI_BRANCH=${GITHUB_REF##*/}
        NORMALIZED_CI_BRANCH=${CI_BRANCH//[\/-]/_}
        aws s3 sync --acl public-read docs/api s3://static.webknossos.org/lib-docs/${NORMALIZED_CI_BRANCH}

    - name: Push docs (for tag)
      if: startsWith(github.event.ref, 'refs/tags') && matrix.python-version == '3.8'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: "eu-west-1"
      run: |
        CI_TAG=$(git describe --tags)
        aws s3 sync --acl public-read docs/api s3://static.webknossos.org/lib-docs/${CI_TAG}

    - name: Check if git is dirty
      run: |
        git diff --no-ext-diff --quiet --exit-code
        [[ -z $(git status -s) ]]

    - name: Publish python package
      if: startsWith(github.event.ref, 'refs/tags') && matrix.python-version == '3.8'
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: ./publish.sh

  build_win:
    # Caution! The Windows VM seems to be running out of storage rather quickly.
    runs-on: windows-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      shell: bash
      run: |
        pip install poetry
        poetry install

    - name: Decompress test data
      shell: bash
      run: tar -xzvf testdata/WT1_wkw.tar.gz

    - name: Python tests
      shell: bash
      run: poetry run pytest tests

    - name: CLI tests
      shell: bash
      run: tests/scripts/all_tests.sh

  build_mac:
    runs-on: macos-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install poetry
        poetry install

    - name: Decompress test data
      run: tar -xzvf testdata/WT1_wkw.tar.gz

    - name: Python tests
      run: poetry run pytest tests

    - name: CLI tests
      run: tests/scripts/all_tests.sh

  docker:
    needs: [build, build_win, build_mac]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build docker image
      run: docker build -t scalableminds/webknossos-cuber:$GITHUB_SHA .

    - name: Smoke test docker
      run: |
        docker run --rm \
          -v$(pwd)/testdata:/app/testdata \
          scalableminds/webknossos-cuber:$GITHUB_SHA \
          wkcuber.cubing \
            --jobs 2 \
            --batch_size 8 \
            --layer_name color \
            --wkw_file_len 32 \
            testdata/tiff testoutput/tiff

    - name: Login to docker
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

    - name: Push docker images
      run: |
        docker push scalableminds/webknossos-cuber:$GITHUB_SHA

    - name: Push docker images (for tag)
      if: startsWith(github.event.ref, 'refs/tags')
      run: |
        CI_TAG=$(git describe --tags)
        docker tag \
          scalableminds/webknossos-cuber:$GITHUB_SHA \
          scalableminds/webknossos-cuber:$CI_TAG
        docker push scalableminds/webknossos-cuber:$CI_TAG

    - name: Push docker images (for branch)
      if: startsWith(github.event.ref, 'refs/heads')
      run: |
        CI_BRANCH=${GITHUB_REF##*/}
        NORMALIZED_CI_BRANCH=${CI_BRANCH//[\/-]/_}
        docker tag \
          scalableminds/webknossos-cuber:$GITHUB_SHA \
          scalableminds/webknossos-cuber:$NORMALIZED_CI_BRANCH
        docker push scalableminds/webknossos-cuber:$NORMALIZED_CI_BRANCH
        if [ "${CI_BRANCH}" == "master" ]; then
          docker tag \
            scalableminds/webknossos-cuber:$GITHUB_SHA \
            scalableminds/webknossos-cuber:latest
          docker push scalableminds/webknossos-cuber:latest
        fi
