[project]
name = "webknossos"
version = "0.0.0"                                                                                                    # filled by dunamai
description = "Python API for working with WEBKNOSSOS datasets, annotations, and for WEBKNOSSOS server interaction."
authors = [{ name = "scalable minds", email = "hello@scalableminds.com" }]
readme = "README.md"
license = { text = "AGPL-3.0" }

classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Education",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11", 
    "Programming Language :: Python :: 3.12", 
    "Programming Language :: Python :: 3.13", 
]

requires-python = ">=3.10,<3.14"

dependencies = [
    "aiohttp ~=3.10.5",
    "attrs >=22.0.0",
    "boltons >=21.0.0",
    "cattrs >=22.0.0",
    "certifi>=2023",
    "cluster-tools",
    "httpx ~=0.27.0",
    "loxun ~=2.0.0",
    "natsort ~=8.4.0",
    "networkx ~=3.2.1",
    "numpy >=2.0.0,<3.0.0",
    "pims ~=0.7.0",
    "psutil ~=6.0.0",
    "python-dateutil ~=2.8.0",
    "python-dotenv ~=1.0.1",
    "rich ~=13.8.0",
    "scipy >=1.13",
    "tensorstore~=0.1.72",
    "typer ~=0.12.5",
    "typing-extensions ~=4.0",
    "universal-pathlib ~=0.2",
    "wkw ==1.1.24",
    "zipp ~=3.5.0",
]

[project.urls]
Homepage = "https://docs.webknossos.org/webknossos-py"
Repository = "https://github.com/scalableminds/webknossos-libs"
Documentation = "https://docs.webknossos.org"
Changelog = "https://github.com/scalableminds/webknossos-libs/blob/master/webknossos/Changelog.md"

# A list of all of the optional dependencies. They can be opted into by other apps.
[project.optional-dependencies]
tifffile = ["tifffile >=2024.8.24"]
imagecodecs = ["imagecodecs >=2021.11.20"]
bioformats = ["JPype1 ~=1.5.0"]
czi = ["pylibCZIrw ==5.0.0"]
examples = [
    "fastremap ~=1.15.0",
    "pandas ~=2.2.0",
    "pooch ~=1.5.2",
    "s3fs >=2023.9.0",
    "tabulate >=0.9.0",
    "scikit-learn ~=1.5.1",
    "scikit-image ~=0.25.0"
]
all = [
    "webknossos[tifffile]",
    "webknossos[imagecodecs]",
    "webknossos[bioformats]",
    "webknossos[examples]",
]

[tool.uv]
extra-index-url = ["https://pypi.scm.io/simple"]
dev-dependencies = [
    "coverage>=7.8.0",
    "fsspec ~=2024.6.0",
    "hypothesis ~=6.35.0",
    "icecream ~=2.1.1",
    "inducoapi ~=2.0.2",
    "jsonschema ~=4.6.0",
    "mypy ~=1.15.0",
    "pytest ~=8.3.2",
    "pytest-cov>=6.0.0",
    "pytest-custom-exit-code ~=0.3.0",
    "pytest-split ~=0.10.0",
    "pytest-sugar ~=1.0.0",
    "pytest-timeout ~=2.3.0",
    "pytest-timestamper ~=0.0.10",
    "types-python-dateutil ~=2.9",
    "ruff ~=0.11.0",
]

[tool.uv.sources]
cluster-tools = { path = "../cluster_tools", editable = true }

[project.scripts]
webknossos = "webknossos.cli.main:app"

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
strict_equality = true
show_error_codes = true
disallow_untyped_defs = true
no_implicit_optional = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".pyenv",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "webknossos/dataset/_utils/vendor",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.10 for automatic linting fixes
target-version = "py310"

[tool.ruff.lint]
# F = Pyflakes https://docs.astral.sh/ruff/rules/#pyflakes-f
# E, W = pycodestyle https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
# I = iSort https://docs.astral.sh/ruff/rules/#isort-i
# A  = Flake8 Builtins https://docs.astral.sh/ruff/rules/#flake8-builtins-a
# PERF = Perflint https://docs.astral.sh/ruff/rules/#perflint-perf
# FIX = Flake8 fixme https://docs.astral.sh/ruff/rules/#flake8-fixme-fix
# ARG = Flake8 unused-arguments https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
# UP = Pyupgrade https://docs.astral.sh/ruff/rules/#pyupgrade-up
select = ["F", "E", "W", "I", "A", "PERF", "FIX", "ARG", "T201", "UP"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]

# E501 Line too long https://docs.astral.sh/ruff/rules/line-too-long/
# E712 true-false-comparison https://docs.astral.sh/ruff/rules/true-false-comparison/
ignore = ["E501", "E712"]

[tool.ruff.lint.per-file-ignores]
"{examples,tests,script_collection,webknossos/cli}/*" = ["T201"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
markers = ["use_proxay: Runs with a proxay instance recording/replaying http responses", "serial"]
testpaths = ["tests"]

[build-system]
requires = ["setuptools>=70.0", "wheel; python_version>='3.12'"]
build-backend = "setuptools.build_meta"

# This is a fix for an issue in setuptools. See: https://github.com/pypa/setuptools/issues/4759
# This should be removed when the issue is resolved.
[tool.setuptools]
license-files = []

[tool.setuptools.packages.find]
where = ["."]
include = ["webknossos*", "webknossos/version.py"]
exclude = ["webknossos.tests", "webknossos/testdata/**"]
