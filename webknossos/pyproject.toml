[tool.poetry]
name = "webknossos"
version = "0.0.0"  # filled by dunamai
description = "Python API for working with WEBKNOSSOS datasets, annotations, and for WEBKNOSSOS server interaction."
authors = ["scalable minds <hello@scalableminds.com>"]
readme = "README.md"
license = "AGPL-3.0"
repository = "https://github.com/scalableminds/webknossos-libs"
homepage = "https://docs.webknossos.org/webknossos-py"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Education",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed"
]
include = ["webknossos/version.py"]  # included explicitly since it's in .gitignore

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
aiohttp = "^3.8.1"
attrs = ">=22.0.0"
boltons = "~21.0.0"
cattrs = ">=22.0.0"
cluster_tools = { path = "../cluster_tools/", develop = true }
fsspec = "^2023.9.0"
httpx = ">=0.20.0,<=0.24.1"
loxun = "^2.0"
natsort = "^6.2.0"
networkx = "^2.6.2"
nibabel = "^5.0.1"
numcodecs = "^0.11"
numpy = "^1.21.0"  # see https://numpy.org/neps/nep-0029-deprecation_policy.html#support-table
psutil = "^5.6.7"
python-dateutil = "^2.8.0"
python-dotenv = "^0.19.0"
rich = "^10.9.0"
scikit-image = "^0.21.0"
scikit-learn = "^1.0.1"
scipy = "^1.9.0"
typer = {extras = ["all"], version = "^0.9.0"}
typing-extensions = "^4.0"
universal-pathlib = "0.1.3"
wkw = "1.1.22"
zarr = "^2.16.0"
zipp = "^3.5.0"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted into by apps.
imagecodecs = { version = ">=2021.11.20", optional = true }
JPype1 = { version = "^1.3.0", optional = true }
pims = { version = "^0.6.0", optional = true }
tifffile = { version = ">=2021.11.2", optional = true }
pylibCZIrw = { version = "3.5.1", source = "scm", optional = true }
zarrita = "0.1.0a18"

[tool.poetry.extras]
pims = ["pims"]
tifffile = ["pims", "tifffile"]
imagecodecs = ["pims", "imagecodecs"]
bioformats = ["pims","JPype1"]
czi = ["pims","pylibCZIrw"]
all = ["pims","tifffile","imagecodecs","JPype1","pylibCZIrw","zarrita"]

[tool.poetry.dev-dependencies]
# autoflake
black = "^23.1.0"
dask = { version = "^2023.9.1", python = ">=3.9", extras = ["distributed"] }
hypothesis = "^6.35.0"
icecream = "^2.1.1"
inducoapi = "^2.0.2"
isort = "^5.9.3"
jsonschema = "^4.6.0"
mypy = "^1.0.0"
openapi-python-client = "0.14.1"
pylint = "^2.16.2"
pytest = "^7.2.1"
pytest-custom-exit-code = "^0.3.0"
pytest-recording = "^0.12.0"
pytest-split = "^0.8.0"
pytest-sugar = "^0.9.4"
pytest-timeout = "^2.1.0"
types-python-dateutil = "^0.1.6"
# packages for examples:
fastremap = "^1.13.3"
pandas = "^1.3.4"
pooch = "^1.5.2"
s3fs = "^2023.9.0"
tabulate = "^0.8.9"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "scm"
url = "https://pypi.scm.io/simple"
priority = "supplemental"

[tool.black]
target_version = ['py37', 'py38']
exclude = '''
(
  /(
    | \.git
    | \.venv
    | \.mypy_cache
    | dist
  )/
)
'''

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
strict_equality = true
show_error_codes = true
disallow_untyped_defs = true
no_implicit_optional = true

[tool.pylint.MASTER]
ignore = ["webknossos/client/_generated"]
load-plugins = ["_helpers.pylint_plugins.attrs_ng_api"]

[tool.pylint."MESSAGES CONTROL"]
disable = ["logging-format-interpolation","logging-fstring-interpolation","broad-except","broad-exception-raised","protected-access","R","C"]

[tool.pytest.ini_options]
markers = ["with_vcr: Runs with VCR recording and optionally blocked network"]
testpaths = ["tests"]

[tool.poetry.scripts]
webknossos = "webknossos.cli.main:app"

[build-system]
requires = ["poetry-core>=1.1"]
build-backend = "poetry.core.masonry.api"
